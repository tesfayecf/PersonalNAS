const char webpage[] PROGMEM = R"=======(


  <!doctype html>
  <html lang="en" style="background-color: rgb(25, 26,27);;">
  
  <meta charset="utf-8">
  <title>Personal NAS Server</title>
  
  <header >Personal NAS server</header>
  
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css">
  
  <style>
  
      body {
          background-color: rgb(25, 26,27);
      }
  
      header {
          position: fixed;
          color: white;
          font-size: 35px;
          font-family: 'Times New Roman', Times, serif;
          text-align: center;
          background-color: rgb(5,152,98);
          width: 97vw;
          max-width: 2328px;
          margin-left: 1vw;
          margin-right: 1vw;
          margin-bottom: 5px;
          margin-top: 5px;
          padding-top: 15px;
          border-radius: 5px;
          padding-bottom: 15px;
      }
  
      .main-container {
          display: flex;
          position: absolute;
          top: 85px;
          width: 97%;
          height: 100%;
          max-width: 1980px;
          min-width: 770px;
          margin-left: 1vw;
          margin-right: 1vw;
          padding: 1px;
          z-index: -10;
      }
  
      .menu-container {
          display: flex;
          flex-direction: column;
          position: fixed;
          background-color: rgb(53,57,59);
          height: 650px;
          width: 150px;
          margin-top: 15px;
          margin-right: 10px;
          border-radius: 5px;
      }
  
      .menu-div {
          position: relative;
          background-color: rgb(70, 75, 78);
          height: 90px;
          width: 130px;
          margin-left: 10px;
          margin-top: 10px;
          margin-bottom: 10px;
          border-radius: 15px;
      }
  
      .menu-button {
          position: relative;
          background-color: rgba(0,0,0,0);
          top: 0px;
          left: 10px;
          height: 70px;
          width: 110px;
          margin: 0px;
          border-width: 0px;
      }
  
      .home-div:hover {   background-color: rgb(120, 120, 120);  }
      .back-div:hover {   background-color: rgb(120, 120, 120);  }
      .trash-div:hover {   background-color: rgb(120, 120, 120);  }
      .nwfldr-div:hover {   background-color: rgb(120, 120, 120);  }
      .nwfl-div:hover {   background-color: rgb(120, 120, 120);  }
      .open-div:hover {   background-color: rgb(120, 120, 120);  }
      .dwnld-div:hover {   background-color: rgb(120, 120, 120);  }
  
  
      .historial-container {
          position: fixed;
          background-color: rgb(53,57,59);
          right: 15px;
          width: 150px;
          height: 640px;
          margin-top: 15px;
          margin-left: 0px;
          border-radius: 5px;
  
      }
  
      .data-container {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(5vw, 200px));
          justify-items: center;
          align-items: center;
          grid-gap: 10px;
          grid-auto-rows: minmax(200px, 200px);
          
          position: relative;
          background-color: rgb(70, 75, 78);
          left: 175px;
          padding: 15px;
          margin-top: 15px;
          margin-left: 5px;
          margin-right: 10px;
          width: 1091px;
          height: 100%;
          overflow: visible;
      }
  
      .data-div {
          color: white;
          text-align: center;
          line-height: normal;
          vertical-align: middle;
          height: 200px;
          width: 200px;
          border-radius: 15px;
          background-color: rgb(70, 75, 78);
      }
  
      .data-button {
          position: relative;
          background-color: rgba(0,0,0,0);
          top: 30px;
          height: 140px;
          width: 180px;
          padding: 10px;
          border-width: 0px;
          justify-content: center;
          align-items: center;
      }
  
      .data-text-div {
          position: absolute;
          font-size: 22px;
          font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
          font-weight: 10px;
          color: white;
          height: 30px;
          width: 100%;
          left: 0px;
          bottom: 0px;
          margin: 5px;
          align-items: center;
          line-height: 30px;
          
      }
  
      .data-icon {
          color: rgb(253, 184, 83);
          position: relative;
          top: -20px;
          left: 10px;
      }
  
      .data-file {
          position: absolute;
          height: 90vh;
          width: 100%;
          top: 0px;
      }
  
      .data-div:hover {   background-color: rgb(153, 153, 77);    }
  
      .data-div:hover .data-text-div  {   color: black;   }
  
      .data-div:hover .data-icon {    color: black;   }
  
  
  </style>
  
  <body>
      
      <div id="main-container" class="main-container">
  
          <div class="menu-container">
  
              <div id="home-div" class="menu-div home-div">
                  <button id="home-but" class="menu-button home-but"><i class="fa-solid fa-home fa-3x"></i></button>
              </div>
  
              <div id="back-div" class="menu-div back-div">
                  <button id="back-but" class="menu-button back-but"><i class="fa-solid fa-backward fa-3x"></i></i></button>
              </div>
  
              <div id="trash-div" class="menu-div trash-div">
                  <button id="trash-but" class="menu-button trash-but"><i class="fa-solid fa-trash fa-3x"></i></button>
              </div>
  
              <div id="nwfldr-div" class="menu-div nwfldr-div">
                  <button id="nwfldr-but" class="menu-button nwfldr-but"><i class="fa-solid fa-folder-plus fa-3x"></i></button>
              </div>
  
              <div id="nwfl-div" class="menu-div nwfl-div">
                  <button id="nwfl-but" class="menu-button nwfl-but"><i class="fa-solid fa-file fa-3x" ></i></i></button>
              </div>
  
              <div id="open-div" class="menu-div open-div">
                  <button id="open-but" class="menu-button open-but"><i class="fa-solid fa-pen-to-square fa-3x"></i></button>
              </div>
  
              <div id="dwnld-div" class="menu-div dwnld-div">
                  <button id="dwld-but" class="menu-button dwnld-but"><i class="fa-solid fa-download fa-3x"></i></button>
              </div>
  
          </div>
  
          <div id="data-container" class="data-container" >
              <!-- <embed class="data-file" src= "Pressupost.pdf" type="application/pdf" > -->
              <!-- <embed class="data-file" src="textFile.txt" type="text/text"> -->
              <!-- <embed class="data-file" src="wifiFunctions.cpp" type="text/text"> -->
              <!-- <embed class="data-file" src="loadingGif.gif"> -->
              <!-- <embed class="data-file" src="videollarg.mp4"> -->
              <!-- <embed class="data-file" src="EntradaObert3.iam"> -->
              <!-- <embed class="data-file" src="support_vector_machines_succinctly.epub"> -->
          </div>
  
          <div class="historial-container">
          </div>
      
      </div>
  
  </body>
  
  
  <script>
      const mainpath = "2.152.26.61";
      const mainFolder = "bWFpbmZvbGRlcgo="
      const rewindDirectory = "cmV3aW5kRGlyZWN0b3J5";
      const wrongName = "RUxFTUVOVCBOT1QgRVhJU1Q="
      // const mainpath = "192.168.1.101";
  
      const imageFormats = ["webp", "jpeg", "jpg", "jpe", "jif", "jiff", "jfif", "jfi", "png", "gif", "tiff", "psd", "eps", "ai", "indd", "raw", "arw", "cr2", "nrw", "k25", "bmp", "dib", "heif", "heic", "ind", "indd", "indt", "jp2", "j2k", "jpf", "jpx", "jpm", "mj2", "svg", "svgz", "ai", "heif", "heic"];
      const videoFormats = ["webm", "mkv", "flv", "vob", "ogv", "ogg", "drc", "gifv", "mng", "avi", "MTS", "M2TS", "TS", "mov", "qt", "wmv", "yuv", "rm", "rmvb", "viv", "asf", "amv", "mp4", "mp2", "mpeg", "mpe", "mpv", "mpg", "mpeg", "m2v", "m4v", "svi", "3gp", "3g2", "mxf", "roq", "nsv", "flv", "f4v", "f4p", "f4a", "f4b"];
      const audioFormats = ["3gp", "aa", "aac", "aax", "act", "aiff", "alac", "amr", "ape", "au", "awb", "dss", "dvf", "flac", "gsm", "iklax", "ivs", "m4a", "m4b", "m4p", "mmf", "mp3", "mpc", "msv", "nmf", "ogg", "oga", "mogg", "opus", "ra", "rm", "raw", "rf64", "sln", "tta", "voc", "vox", "wav", "wma", "wv", "webm", "8svx", "cds"];
      const codeFormats = ["c", "cgi", "class", "cpp", "cs", "css", "h", "java", "php", "py", "sh", "swift", "vb", "html", "js", "ahk", "asp", "aspx", "axd", "asx", "asmx", "ashx", "cfm", "yaws", "htm", "xhtml", "shtml", "jhtml", "jps", "jspx", "wss", "do", "action", "pl", "php4", "php3", "phtml", "rb", "rhtml", "rss", "xml", "dll", "fcgi"];
      const compressedFormats = [];
      const wordFormats = ["doc", "dot", "wbk", "docx", "docm", "dotx", "dotm", "docb", "wll", "wwl"]
      const excelFormats = ["xlsx", "xlsm", "xlsb", "xltx", "xltm", "xls", "xlt", "xls", "xml", "xlam", "xla", "xlw", "xlr", "xll"];
      const powerpointFormats = ["pptx", "pptm", "ppt", "potx", "potm", "pot", "ppsx", "ppsm", "pps", "ppam", "ppa", "sldx", "sldm", "pa"];
  
      function setDataContainerWidth() {
          var viewport_width = window.innerWidth; 
          var container = document.getElementById("data-container");
          var dataWidth = viewport_width - 440;
          if (dataWidth < 200) { dataWidth = 200;}
          container.style.width = String(dataWidth) + "px";
      }
  
      function requestData(action, path) {
          var oReq = new XMLHttpRequest();
          oReq.addEventListener("load", action);
          webpath = "http://" + mainpath + "/" + path;
          oReq.open("GET", webpath);
          oReq.send();
      }
      
      function requestArguments(action, path, parameters, values) {
          var oReq = new XMLHttpRequest();
          oReq.addEventListener("load", action);
          var parametersString = "";
          for (var i = 0; i < parameters.length; i++) {
              parametersString += parameters[i] + "=" + values[i];
              if (i < parameters.length - 1) {
                  parametersString += "&";
              }
          }
          webpath = "http://" + mainpath + "/" + path + "?" + parametersString;
          oReq.open("GET", webpath);
          oReq.send();
      }
  
      function addDiv(fileData) {
          var folderType = false;
          const div = document.createElement("div");
          div.setAttribute("id", "div-" + fileData.name);
          const container = document.getElementById("data-container");
          container.appendChild(div);
          div.classList.add("data-div");
          if (fileData.type == "folder")  folderType = true;
          addButton(fileData.name, fileData.extension, folderType);
          addIcon(fileData.name, fileData.extension, folderType);
      }
  
      function addButton(name, extension, folder) {
          const button = document.createElement("button");
          button.setAttribute("id", "button-" + name);
          const divContainer = document.getElementById("div-" + name);
          divContainer.appendChild(button);
          button.classList.add("data-button");
          button.innerHTML = '<div id="data-text-div-' + name + '" class="data-text-div">' + name + '</div>';
          var actionText = "javascript: changeFolder1(" + name + ");";
          if (folder) button.onclick = () => {changeFolder(name);}
          else button.onclick = () => {openFile(name);}
      }
  
      function addIcon(name, extension, folder = false) {
          const icon = document.createElement("i");
          icon.setAttribute("id", "icon-" + name);
          const buttonContainer = document.getElementById("button-" + name);
          buttonContainer.appendChild(icon);
          icon.classList.add("data-icon");
          icon.classList.add("fa-solid");
          if (folder) {
              if (name == "imatges" || name == "imagenes" || name == "images") icon.classList.add("fa-folder-image");
              else if (name == "música" || name == "musica" || name == "music") icon.classList.add("fa-folder-music");
              else icon.classList.add("fa-folder-open");
          } else {
              if ("pdf" == extension) icon.classList.add("fa-file-pdf");
              if ("txt" == extension) icon.classList.add("fa-file-lines");
              else if (imageFormats.includes(extension)) icon.classList.add("fa-file-image");
              else if (videoFormats.includes(extension)) icon.classList.add("fa-file-video");
              else if (audioFormats.includes(extension)) icon.classList.add("fa-file-audio");
              else if (codeFormats.includes(extension)) icon.classList.add("fa-file-code");
              else if (wordFormats.includes(extension)) icon.classList.add("fa-file-word");
              else if (excelFormats.includes(extension)) icon.classList.add("fa-file-excel");
              else if (powerpointFormats.includes(extension)) icon.classList.add("fa-file-powerpoint");
  
              else icon.classList.add("fa-file");
              icon.style.left = "5px";
          }
          icon.classList.add("fa-7x");
          
      }
  
      function populate() {
          if (this.responseText == wrongName) {
              alert("This file doesn not exist!");
              return;
          }
          const container = document.getElementById("data-container");
          container.innerHTML = "";
          const elements = JSON.parse(this.responseText);
          var count = Object.keys(elements).length;
          for (let i = 1; i <= count; i++) {
              addDiv(elements[i][0]);
          }
      }
  
      function changeFolder(name) {
          requestArguments(populate, "dirList", ["folder"], [name]);
      }
      
      function openFile(name) {
          alert(name);
      }
  
      document.getElementById("home-but").onclick = () => {requestArguments(populate, "dirList", ["folder"], [mainFolder]);}
      requestArguments(populate, "dirList", ["folder"], [mainFolder]);
      setInterval(setDataContainerWidth, 100);
  
  
  
  </script>
  
  </html>
  


)=======";


#define favicon_ico_len 4286
const uint8_t favicon_ico[] PROGMEM = {
  0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x20, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0xA8, 0x10, 
  0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x45, 0x44, 0x01, 0x46, 0x25, 0x43, 0x01, 0x1E, 0xF9, 
  0x4A, 0x00, 0x34, 0x83, 0x46, 0x03, 0x2C, 0xAC, 0x47, 0x2B, 0x2C, 0xAE, 0x48, 0x6D, 0x2C, 0xAF, 
  0x48, 0xAD, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAF, 0x48, 0xF3, 0x2C, 0xAF, 0x48, 0xFD, 0x2C, 0xAF, 
  0x48, 0xFD, 0x2C, 0xAF, 0x48, 0xF3, 0x2C, 0xAF, 0x48, 0xDA, 0x2C, 0xAF, 0x48, 0xAD, 0x2C, 0xAE, 
  0x48, 0x6D, 0x2C, 0xAC, 0x47, 0x2B, 0x33, 0x85, 0x46, 0x04, 0x1E, 0xF9, 0x4A, 0x00, 0x46, 0x27, 
  0x43, 0x01, 0x40, 0x45, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x3F, 0x47, 0x44, 0x01, 0x00, 0xFF, 0x54, 0x00, 0x35, 0x7C, 0x46, 0x03, 0x2C, 0xAD, 
  0x48, 0x38, 0x2C, 0xAF, 0x48, 0x97, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAF, 0x48, 0xFC, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFC, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAF, 0x48, 0x98, 0x2C, 0xAD, 0x48, 0x38, 0x35, 0x78, 
  0x45, 0x03, 0x00, 0xFF, 0x54, 0x00, 0x3F, 0x47, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x41, 0x40, 
  0x44, 0x01, 0x19, 0xFF, 0x4B, 0x00, 0x2D, 0xAA, 0x47, 0x1A, 0x2C, 0xAF, 0x48, 0x8A, 0x2C, 0xAF, 
  0x48, 0xEA, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xEA, 0x2C, 0xAF, 
  0x47, 0x89, 0x2D, 0xAA, 0x47, 0x1A, 0x19, 0xFF, 0x4B, 0x00, 0x41, 0x40, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x42, 0x39, 0x44, 0x01, 0x12, 0xFF, 
  0x4D, 0x00, 0x2C, 0xAD, 0x48, 0x36, 0x2C, 0xAF, 0x48, 0xC2, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xC2, 0x2C, 0xAD, 0x48, 0x36, 0x12, 0xFF, 0x4D, 0x00, 0x42, 0x39, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x41, 0x40, 0x44, 0x01, 0x12, 0xFF, 0x4D, 0x00, 0x2C, 0xAD, 
  0x48, 0x42, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAE, 0x48, 0x42, 0x12, 0xFF, 
  0x4D, 0x00, 0x41, 0x3F, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x3F, 0x47, 0x44, 0x01, 0x19, 0xFF, 0x4B, 0x00, 0x2C, 0xAD, 0x47, 0x36, 0x2C, 0xAF, 
  0x48, 0xD9, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAD, 
  0x48, 0x36, 0x19, 0xFF, 0x4B, 0x00, 0x3F, 0x47, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x45, 
  0x44, 0x01, 0x00, 0xFF, 0x54, 0x00, 0x2D, 0xAA, 0x47, 0x1A, 0x2C, 0xAF, 0x48, 0xC2, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xC2, 0x2D, 0xAA, 0x47, 0x1A, 0x00, 0xFF, 0x54, 0x00, 0x40, 0x45, 0x44, 0x01, 0x46, 0x26, 
  0x43, 0x01, 0x35, 0x7A, 0x46, 0x03, 0x2C, 0xAF, 0x48, 0x8A, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x47, 0x89, 0x36, 0x78, 0x45, 0x03, 0x46, 0x27, 0x43, 0x01, 0x1E, 0xF9, 
  0x4A, 0x00, 0x2C, 0xAD, 0x48, 0x38, 0x2C, 0xAF, 0x48, 0xEA, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xEA, 0x2C, 0xAD, 0x48, 0x38, 0x1E, 0xFA, 0x4A, 0x00, 0x34, 0x85, 
  0x46, 0x04, 0x2C, 0xAF, 0x48, 0x98, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 
  0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 
  0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 
  0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 
  0x45, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0x98, 0x34, 0x84, 0x46, 0x03, 0x2C, 0xAC, 
  0x47, 0x2B, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x4E, 0xBC, 0x65, 0xFF, 0x83, 0xD0, 0x94, 0xFF, 0x8D, 0xD4, 
  0x9C, 0xFF, 0x8D, 0xD3, 0x9C, 0xFF, 0x8D, 0xD3, 0x9C, 0xFF, 0x8D, 0xD3, 0x9C, 0xFF, 0x8D, 0xD4, 
  0x9C, 0xFF, 0x89, 0xD2, 0x98, 0xFF, 0x43, 0xB8, 0x5C, 0xFF, 0x2B, 0xAF, 0x46, 0xFF, 0x2C, 0xAF, 
  0x47, 0xFF, 0x66, 0xC5, 0x7A, 0xFF, 0x8F, 0xD4, 0x9D, 0xFF, 0x8D, 0xD3, 0x9C, 0xFF, 0x8D, 0xD3, 
  0x9C, 0xFF, 0x8D, 0xD3, 0x9C, 0xFF, 0x8D, 0xD3, 0x9C, 0xFF, 0x8D, 0xD4, 0x9C, 0xFF, 0x83, 0xD0, 
  0x94, 0xFF, 0x4E, 0xBC, 0x65, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAC, 0x48, 0x2B, 0x2C, 0xAE, 
  0x48, 0x6D, 0x2C, 0xAF, 0x48, 0xFC, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2A, 0xAE, 
  0x46, 0xFF, 0x56, 0xBF, 0x6C, 0xFF, 0xDC, 0xF1, 0xE1, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xF7, 0xFB, 0xF8, 0xFF, 0x5F, 0xC2, 0x74, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x2B, 0xAF, 
  0x47, 0xFF, 0xAB, 0xDF, 0xB6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xDC, 0xF1, 0xE0, 0xFF, 0x56, 0xBF, 0x6C, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFC, 0x2C, 0xAE, 0x48, 0x6D, 0x2C, 0xAF, 
  0x48, 0xAD, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2B, 0xAF, 
  0x46, 0xFF, 0x9F, 0xDA, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xF5, 0xFA, 0xF6, 0xFF, 0x5E, 0xC2, 0x73, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x2B, 0xAF, 
  0x47, 0xFF, 0xAA, 0xDE, 0xB5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xDA, 0xAC, 0xFF, 0x2B, 0xAF, 0x46, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xAD, 0x2C, 0xAF, 
  0x48, 0xDA, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2B, 0xAF, 
  0x47, 0xFF, 0xA3, 0xDC, 0xAF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xF8, 0xFB, 0xF9, 0xFF, 0x5F, 0xC2, 0x74, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x2B, 0xAF, 
  0x47, 0xFF, 0xAC, 0xDF, 0xB6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA3, 0xDC, 0xAF, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAF, 
  0x48, 0xF3, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2A, 0xAE, 
  0x46, 0xFF, 0x5D, 0xC2, 0x73, 0xFF, 0xE5, 0xF4, 0xE8, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xE6, 0xF5, 
  0xE9, 0xFF, 0xC2, 0xE7, 0xCA, 0xFF, 0x52, 0xBD, 0x69, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x2C, 0xAF, 
  0x47, 0xFF, 0x8A, 0xD2, 0x99, 0xFF, 0xD2, 0xED, 0xD8, 0xFF, 0xF6, 0xFB, 0xF7, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xE5, 0xF4, 0xE8, 0xFF, 0x5E, 0xC2, 0x73, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xF3, 0x2C, 0xAF, 
  0x48, 0xFD, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x58, 0xC0, 0x6E, 0xFF, 0xC9, 0xEA, 0xD0, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xDE, 0xF2, 
  0xE2, 0xFF, 0x63, 0xC4, 0x77, 0xFF, 0x2C, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x47, 0xFF, 0x2B, 0xAF, 
  0x47, 0xFF, 0x36, 0xB3, 0x50, 0xFF, 0x99, 0xD8, 0xA7, 0xFF, 0xF8, 0xFC, 0xF9, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xF0, 0xF9, 
  0xF2, 0xFF, 0x69, 0xC6, 0x7D, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFD, 0x2C, 0xAF, 
  0x48, 0xFD, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x27, 0xAD, 0x43, 0xFF, 0x81, 0xCF, 0x91, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xDD, 0xF1, 0xE1, 0xFF, 0x60, 0xC3, 0x74, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x33, 0xB2, 
  0x4D, 0xFF, 0x97, 0xD7, 0xA5, 0xFF, 0xF8, 0xFB, 0xF9, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD7, 0xEF, 
  0xDC, 0xFF, 0x3B, 0xB5, 0x55, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFD, 0x2C, 0xAF, 
  0x48, 0xF3, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2B, 0xAF, 0x46, 0xFF, 0x44, 0xB8, 0x5D, 0xFF, 0xCD, 0xEC, 
  0xD4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0xF3, 0xE5, 0xFF, 0x6D, 0xC8, 0x80, 0xFF, 0x9D, 0xD9, 
  0xAA, 0xFF, 0xFA, 0xFC, 0xFA, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFC, 0xFA, 0xFF, 0x8A, 0xD2, 
  0x99, 0xFF, 0x2C, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xF3, 0x2C, 0xAF, 
  0x48, 0xDA, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2B, 0xAF, 0x46, 0xFF, 0x49, 0xBA, 
  0x61, 0xFF, 0x95, 0xD7, 0xA3, 0xFF, 0xAE, 0xE0, 0xB8, 0xFF, 0xB8, 0xE3, 0xC1, 0xFF, 0xFA, 0xFC, 
  0xFB, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xF3, 0xFA, 0xF5, 0xFF, 0xFA, 0xFC, 
  0xFB, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xF6, 0xFB, 0xF7, 0xFF, 0xB2, 0xE1, 
  0xBC, 0xFF, 0xBE, 0xE6, 0xC7, 0xFF, 0xBF, 0xE6, 0xC7, 0xFF, 0x7D, 0xCE, 0x8E, 0xFF, 0x33, 0xB2, 
  0x4E, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAF, 
  0x48, 0xAD, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2A, 0xAF, 
  0x46, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x39, 0xB4, 0x53, 0xFF, 0xBF, 0xE6, 
  0xC8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 0xFE, 0xFF, 0xFE, 0xFE, 
  0xFE, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xE1, 0xBC, 0xFF, 0x34, 0xB2, 
  0x4E, 0xFF, 0x30, 0xB1, 0x4B, 0xFF, 0x31, 0xB1, 0x4C, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x2B, 0xAF, 
  0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xAD, 0x2C, 0xAE, 
  0x48, 0x6D, 0x2C, 0xAF, 0x48, 0xFC, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2A, 0xAE, 0x46, 0xFF, 0x49, 0xBA, 
  0x61, 0xFF, 0xB8, 0xE4, 0xC1, 0xFF, 0xF5, 0xFA, 0xF6, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xF3, 0xFA, 0xF4, 0xFF, 0xAF, 0xE0, 0xB9, 0xFF, 0x42, 0xB7, 0x5B, 0xFF, 0x2A, 0xAF, 
  0x46, 0xFF, 0x2C, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFC, 0x2C, 0xAE, 0x48, 0x6D, 0x2D, 0xAC, 
  0x48, 0x2B, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2A, 0xAF, 
  0x46, 0xFF, 0x35, 0xB2, 0x4F, 0xFF, 0x63, 0xC4, 0x77, 0xFF, 0x87, 0xD1, 0x96, 0xFF, 0x85, 0xD0, 
  0x95, 0xFF, 0x5E, 0xC2, 0x73, 0xFF, 0x32, 0xB2, 0x4D, 0xFF, 0x2A, 0xAF, 0x46, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAC, 0x47, 0x2B, 0x33, 0x84, 
  0x45, 0x04, 0x2C, 0xAF, 0x48, 0x98, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2B, 0xAF, 0x47, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x29, 0xAE, 
  0x45, 0xFF, 0x29, 0xAE, 0x45, 0xFF, 0x2C, 0xAF, 0x47, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0x98, 0x34, 0x84, 0x46, 0x03, 0x1E, 0xF9, 
  0x4A, 0x00, 0x2C, 0xAD, 0x48, 0x39, 0x2C, 0xAF, 0x48, 0xEB, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xEA, 0x2C, 0xAD, 0x47, 0x38, 0x1E, 0xF9, 0x4A, 0x00, 0x46, 0x25, 
  0x43, 0x01, 0x35, 0x7C, 0x46, 0x03, 0x2C, 0xAF, 0x48, 0x8A, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0x8A, 0x35, 0x7C, 0x45, 0x03, 0x46, 0x25, 0x43, 0x01, 0x40, 0x45, 
  0x44, 0x01, 0x00, 0xFF, 0x53, 0x00, 0x2D, 0xAA, 0x47, 0x1A, 0x2C, 0xAF, 0x48, 0xC2, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xC2, 0x2D, 0xAA, 0x47, 0x1A, 0x00, 0xFF, 0x53, 0x00, 0x40, 0x45, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x3F, 0x47, 0x44, 0x01, 0x18, 0xFF, 0x4B, 0x00, 0x2C, 0xAD, 0x47, 0x36, 0x2C, 0xAF, 
  0x48, 0xDA, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAD, 
  0x48, 0x36, 0x19, 0xFF, 0x4B, 0x00, 0x3F, 0x47, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x41, 0x3F, 0x44, 0x01, 0x11, 0xFF, 0x4C, 0x00, 0x2C, 0xAD, 
  0x48, 0x42, 0x2C, 0xAF, 0x48, 0xDA, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xDA, 0x2C, 0xAD, 0x48, 0x42, 0x12, 0xFF, 
  0x4D, 0x00, 0x41, 0x3F, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x42, 0x38, 0x44, 0x01, 0x11, 0xFF, 
  0x4C, 0x00, 0x2C, 0xAD, 0x47, 0x36, 0x2C, 0xAF, 0x48, 0xC2, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xC2, 0x2C, 0xAD, 0x48, 0x36, 0x12, 0xFF, 0x4D, 0x00, 0x42, 0x39, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x41, 0x3F, 
  0x44, 0x01, 0x18, 0xFF, 0x4B, 0x00, 0x2D, 0xAA, 0x47, 0x1A, 0x2C, 0xAF, 0x48, 0x8A, 0x2C, 0xAF, 
  0x48, 0xEA, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xEA, 0x2C, 0xAF, 
  0x48, 0x8A, 0x2D, 0xAA, 0x47, 0x1B, 0x19, 0xFF, 0x4B, 0x00, 0x41, 0x3F, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x3F, 0x47, 0x44, 0x01, 0x00, 0xFF, 0x53, 0x00, 0x35, 0x7C, 0x46, 0x03, 0x2C, 0xAD, 
  0x48, 0x38, 0x2C, 0xAF, 0x48, 0x98, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAF, 0x48, 0xFC, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 0x48, 0xFF, 0x2C, 0xAF, 
  0x48, 0xFC, 0x2C, 0xAF, 0x48, 0xDF, 0x2C, 0xAF, 0x48, 0x98, 0x2C, 0xAD, 0x48, 0x38, 0x36, 0x7B, 
  0x46, 0x03, 0x00, 0xFF, 0x54, 0x00, 0x3F, 0x47, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x45, 0x44, 0x01, 0x46, 0x25, 0x43, 0x01, 0x1E, 0xF9, 
  0x4A, 0x00, 0x33, 0x83, 0x45, 0x03, 0x2D, 0xAC, 0x48, 0x2B, 0x2C, 0xAE, 0x48, 0x6D, 0x2C, 0xAF, 
  0x48, 0xAD, 0x2C, 0xAF, 0x48, 0xD9, 0x2C, 0xAF, 0x48, 0xF3, 0x2C, 0xAF, 0x48, 0xFD, 0x2C, 0xAF, 
  0x48, 0xFD, 0x2C, 0xAF, 0x48, 0xF3, 0x2C, 0xAF, 0x48, 0xDA, 0x2C, 0xAF, 0x48, 0xAD, 0x2C, 0xAE, 
  0x48, 0x6E, 0x2C, 0xAC, 0x47, 0x2B, 0x34, 0x86, 0x46, 0x04, 0x1E, 0xF9, 0x4A, 0x00, 0x46, 0x26, 
  0x43, 0x01, 0x40, 0x45, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 
  0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x40, 0x44, 0x44, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
